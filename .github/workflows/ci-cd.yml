# in: .github/workflows/ci-cd.yml

name: CI/CD Pipeline

on:
  # Run this workflow on pushes to the main branch
  push:
    branches: [main]
  # Also run the "test" job on pull requests targeting the main branch
  pull_request:
    branches: [main]

jobs:
  # JOB 1: Continuous Integration (CI)
  test:
    runs-on: ubuntu-latest
    # Environment variables are needed for the tests to connect to the MLflow server
    env:
      MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
      MODEL_NAME: st126380-a3-model # It's better to hardcode this
      # We don't need RUN_ID for testing, as the test loads the "Production" model

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies from requirements.txt
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit tests with pytest
        run: |
          pytest tests/ -v

  # JOB 2: Continuous Deployment (CD)
  deploy:
    # This job will only run if the 'test' job completes successfully
    # AND the event was a push to the 'main' branch (not a pull request).
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }} # Your GitHub username
          password: ${{ secrets.GITHUB_TOKEN }} # An automatic secret provided by GitHub

      - name: Build and push Docker image to GHCR
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          # Pass the MLflow URI secret to the Docker build process
          build-args: |
            MLFLOW_TRACKING_URI=${{ secrets.MLFLOW_TRACKING_URI }}
          # Tag the image with your username and repo name
          tags: ghcr.io/prabidhipy/a3_car_price:latest

      - name: Deploy to AIT server via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ vars.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          proxy_host: ${{ vars.PROXY_HOST }}
          proxy_username: ${{ secrets.USERNAME }}
          proxy_key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd st126380
            echo "MLFLOW_TRACKING_URI=${{ secrets.MLFLOW_TRACKING_URI }}" > .env
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
            
            docker pull ghcr.io/prabidhipy/a3_car_price:latest

            docker compose down

            # Start the application using the newly pulled image
            docker compose up -d